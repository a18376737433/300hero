name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: 安装Node.js
        uses: actions/setup-node@v2-beta
      - name: 安装yarn
        run:  npm i -g yarn
      - name: 安装依赖 # 使用yarn 安装依赖
        run: yarn
      - name: build vue and ele
        env: 
          GITHUB_TOKEN: ${{secrets.BUILD_TOKEN}}
        run: yarn build
      - name: cleanup artifacts
        run: npx rimraf "dist/win-ia32-unpacked"&&npx rimraf "dist/win-ia32-unpacked"&&npx rimraf "dist/render"&& npx rimraf "dist/main"&&npx rimraf "dist/builder-debug.yml"&&npx rimraf "dist/builder-effective-config.yaml"
      - name: upload dist
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
      - name: 读取package.json
        uses: tyankatsu0105/read-package-version-actions@v1
        id: package-version
      - name: Create Release for Tag
        id: release_tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD_TOKEN }} # 这块需要用到 github的token，因为需要对分之进行代码推送
        with:
          tag_name: ${{ steps.package-version.outputs.version }}
          release_name: ${{ steps.package-version.outputs.version }}
          prerelease: false # 是否为预发布版本
      - name: 上传exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD_TOKEN }}
        with:
          upload_url: ${{ steps.release_tag.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: dist

